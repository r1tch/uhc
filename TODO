- Logging - DONE
- Configuration - DONE
- Event loop + TCP server - DONE
- Modules one by one:
  - Remote controller, own protocol (TCP server)
    - first only allow from same network - DONE
    - authentication later:
      - pw in cfg file first
      - no auth if on same network (also config option)
      - otherwise simple challenge-response auth - http://www.hcsw.org/reading/chalresp.txt (challenge random data, resp: md5(data+pw))
    - ping: if same network, every 5 secs; otherwise every 60secs -- maybe only from client?
    - abstraction: Services, subscriber (events) & commands 
      - Service: one instance of each class (for now)
        - msg can be sent; originator as param
        - QUERY-RESPONSE (also via TCP): directed response can be sent to originator service, specifying original msg in "origMsg"
          - TcpServer will add a "connection" member into its msg (to the json data)
          - upon response, "origMsg" member will contain original connection -> that's how we know where to send to
        - eg 1: zwave got list of nodes -> Controller.broadcast(nodes) -> calls Service.msg(zwave, nodes), no response expected
        - eg 2: query list of nodes: tcpserver calls zwave.msg(tcpserver, { msg: getNodes }); zwave calls tcpserver.msg(zwave, nodesAsDict)
      - Controller: repository of services - DONE
      - TcpServer also a Service - DONE
      - Automators are services as well
  - ZWave - via json
    - async http - DONE
    - yes, json, simple: https://docs.python.org/2/library/json.html
    - dl devices - DONE
    - remote ctrl:
      - queryable list - DONE
      - on-off - DONE
  - Simple Android client; initially ZWave control only
  - XBMC
    - osmc2 - play music library from stora
    - remote control of osmc/kodi
  - IR -- lirc! No lib needed, proto is dead simple - DONE
  - Paradox - DONE
  - AutoShade -- using entry/exit/sunrise/sunset - DONE
  - SleepSecurity -- sleep detection, etc - DONE
  - Media -- movie mode & co - DONE


  !!!!!!!!!! TODO: double-line json triggers unhandled extra data error! !!!!!
  !!!!!!!!!! TODO: also propagate custom 'id', so client can mark what the request was...? Do we need this??

  ----- Android Client
  - Names: UHC - Universal Home Control -- hlome, hyome, etc... Why? Needed a .com address :)
  - Design:
    - see Google Photos:
      - icon tabs on the bottom to choose between screens (http://developer.android.com/training/implementing-navigation/lateral.html#PagerTitleStrip ?)
      - AppBar on top
      - _no_ navigation drawer (only later for multiple connections???)
      - "..." for settings -- well, make The Gear the only button for now
  - Workings:
    - one activity, swipe-tabs PagerTitleStrip w icons on bottom -- DONE
    - icons on bottom: later? maybe now we could do it since scroll problem is sorted out
    - fragments for the tabs: - DONE
      - shades
      - lights
      - media -- should include projector + hifi
      - climate (A/C and then Loxone interface?)
      - security (display movements, sleep time, intercom)
    - save list of ZWave nodes & status updates in shared prefs
    - create a list of lights with on-off switch
    - ...then shades, with up-stop-down switches; with feedback
    - Service: handles connectivity and auto-reconnects; service running -> connected
      - also handles screen wakeup (subclass?)
    - Activity:
      - onResume: gets service reference -- http://stackoverflow.com/questions/10482171/how-to-get-reference-to-running-service
      - onPause: tells svc to remove Activity
      - registers it in the service for updates (to avoid comm via intents)
        - note: tcp-induced callbacks must use runOnUIThread!
      - fn calls can deliver json-generated objects
  - Settings
    - accessible from menu via menu btn
    - host, port for now
    - Server Configuration -- changes and uploads server config settings, LATER
  - ----------- continue HERE --------------------
  - Paradox support - to report events - MORE TESTING NEEDED
  - SunRiseSet -- service, reports timestamps on new days - DONE
  - Schedule - DONE
  - automators:
    - shades - AutoShade - DONE
    - AutoLight
      - entry: light up entry hall - DONE
      - flashalarm on/off via msg - DONE
    - sleep detection (SleepSecurity) -- !!! - TESTING
      - well, would be nice, to only roll down at night if asleep...
      - setting guest mode here too !!
  - IR module - should be easy with udpirsend, soldering needed first NAH! use irtrans, write client... should be easy - DONE
  - HiFi control (on-off, switch to proper source, volume up/down, maybe mute?) - DONE
  - Android
    - crash fix - DONE
    - crash fix #2
    - XBMC control
    - connectivity feedback via icon
    - A/C control
    - hifi & projector buttons
    - state feedback
    - tablet screen
    - scene buttons
    - disable autoshade until next exit
      - -> aka guest mode
      - icon feedback (sthg along "no auto" / manual)
  - save state into /tmp for restarts (simply as json, re-read on startup)
  - password
    - md5-based auth: random string as challenge; append pw, send hash back
    - Android:
      - set pw preference
        - based on auth request, detect remote host
        - disable option if not on local network
  - preferences can be sent to Uhc -> RemoteConfig service; uses "ro" and "rw" to make FS writable
  - List of lights with on-off switch
    - LATER: long-press for dimmers, exact settings
    - LATER: icon for dimmer & on-off
  - List of shades - 3 buttons
    - LATER: long-press for level setting
  - Show if connected (icon)
  - Pop up window if flashAlarming
  - all other modules...
  - LATER: config option: Expert Mode
    - allows for deletion of schedules (otherwise just print??)
    - allows for reschedule (will send a "new day" notification)

